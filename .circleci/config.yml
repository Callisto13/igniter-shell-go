version: 2.1

executors:
  go:
    docker:
      - image: circleci/golang:1.11

  ruby:
    docker:
      - image: circleci/ruby:2.5

jobs:
  lint-go:
    docker: &docker_go
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: go get golang.org/x/lint/golint
      - run: golint -set_exit_status ./go/...

  test-go:
    docker: *docker_go
    steps:
      - checkout
      - run: go get github.com/jstemmer/go-junit-report
      - run: mkdir -p /tmp/test-results
      - run: go test -v ./go/... | go-junit-report > /tmp/test-results/spec.xml
      - store_test_results:
          path: /tmp/test-results

  vet-go:
    docker: *docker_go
    steps:
      - checkout
      - run: go vet ./go/...

  build-go:
    executor: go
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: make build
      - persist_to_workspace:
          root: .
          paths:
            - bin
            - out

  deploy-xenial-staging:
    executor: ruby
    environment:
      REPOSITORY: gameye/staging
      PACKAGE: ubuntu-xenial
      DISTRIBUTION: ubuntu/xenial
    steps: &deploy_deb_steps
      - run: gem install package_cloud
      - attach_workspace: *attach_workspace
      - run: cp dist/$PACKAGE.deb ./$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb
      - run: >
          package_cloud push $REPOSITORY/$DISTRIBUTION ./$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb

  deploy-xenial-production:
    executor: ruby
    environment:
      REPOSITORY: gameye/production
      PACKAGE: ubuntu-xenial
      DISTRIBUTION: ubuntu/xenial
    steps: *deploy_deb_steps

  deploy-bionic-staging:
    executor: ruby
    environment:
      REPOSITORY: gameye/staging
      PACKAGE: ubuntu-bionic
      DISTRIBUTION: ubuntu/bionic
    steps: *deploy_deb_steps

  deploy-bionic-production:
    executor: ruby
    environment:
      REPOSITORY: gameye/production
      PACKAGE: ubuntu-bionic
      DISTRIBUTION: ubuntu/bionic
    steps: *deploy_deb_steps

workflows:
  version: 2
  go:
    jobs:
      - lint-go: &go_job
          filters: *filter_all
      - test-go: *go_job
      - vet-go: *go_job

      - build-go:
          requires: [ lint-go, test-go, vet-go ]
          filters: &filters_tags
            branches:
              ignore: /.*?/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d+$/
                # v1.0.0-1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-\d+)?$/

      - deploy-xenial-staging:
          context: packagecloud-authorized
          requires: [ build-go ]
          filters: *filters_tags

      - deploy-xenial-production:
          context: packagecloud-authorized
          requires: [ build-go ]
          filters: &filters_tags_production
            branches:
              ignore: /.*?/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d+$/

      - deploy-bionic-staging:
          context: packagecloud-authorized
          requires: [ build-go ]
          filters: *filters_tags

      - deploy-bionic-production:
          context: packagecloud-authorized
          requires: [ build-go ]
          filters: *filters_tags_production
